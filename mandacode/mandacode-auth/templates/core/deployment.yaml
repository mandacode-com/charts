apiVersion: apps/v1

kind: Deployment
metadata:
  name: {{ include "app.core.fullname" . }}
  labels:
    {{- include "app.core.labels" . | nindent 4 }}
spec:
  {{- if not .Values.core.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.core.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.core.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        configmap.checksum: {{ include (print $.Template.BasePath "/core/configmap.yaml") . | sha256sum }}
        dbSecretName.checksum: {{ include "app.database.secretName" . | sha256sum }}
        cookieSecretName.checksum: {{ include "app.core.cookie.secretName" . | sha256sum }}
        sessionStorageSecretName.checksum: {{ include "app.session.storage.secretName" . | sha256sum }}
        oauthSecretName.checksum: {{ include "app.core.oauth.secretName" . | sha256sum }}
      labels:
        {{- include "app.core.labels" . | nindent 8 }}
        {{- with .Values.core.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.core.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.core.serviceAccountName" . }}
      {{- with .Values.core.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
        - name: prisma-migrate
          image: "{{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}"
          imagePullPolicy: {{ .Values.core.image.pullPolicy }}
          command: ["npx", "prisma", "migrate", "deploy"]
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.database.secretName" . }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.database.secretName" . }}
                  key: password
            - name: DATABASE_URL
              value: "postgres://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"

      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}"
          imagePullPolicy: {{ .Values.core.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.core.service.port }}
              protocol: TCP
          {{- with .Values.core.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.core.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.core.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.core.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.core.configMapName" . }}
          env:
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.cookie.secretName" . }}
                  key: secret
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "app.core.configMapName" . }}
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.database.secretName" . }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.database.secretName" . }}
                  key: password
            - name: DATABASE_URL
              value: "postgres://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
            - name: SESSION_STORAGE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.session.storage.secretName" . }}
                  key: redis-password
            - name: OAUTH_GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: google-client-id
            - name: OAUTH_GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: google-client-secret
            - name: OAUTH_KAKAO_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: kakao-client-id
            - name: OAUTH_KAKAO_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: kakao-client-secret
            - name: OAUTH_NAVER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: naver-client-id
            - name: OAUTH_NAVER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.core.oauth.secretName" . }}
                  key: naver-client-secret
      {{- with .Values.core.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.core.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
