core:
  replicaCount: 1

  image:
    repository: registry.mandacode.com/saju/saju-core
    pullPolicy: IfNotPresent
    tag: "0.0.7"
    port: 3000

  imagePullSecrets:
    - name: regcred

  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext: {}

  service:
    type: ClusterIP
    port: 80
    targetPort: 3000

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    httpGet:
      path: /health
      port: 3000
  readinessProbe:
    httpGet:
      path: /health
      port: 3000

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    app:
      configMapName: saju-config

  nodeEnv: "production"
  openai:
    apiKey: ""
    system_message:
      daily:
        all: "주어지는 정보에 대해 일일 사주를 서술해줘. 답변은 한국어이어야 하며 각각 300자 이내로 해줘."
      yearly:
        chart: "주어지는 정보에 대해 신년 사주를 서술해줘. 만약 시간 비활성화가 있다면 시간은 생략해."
        general: "주어진 사주 정보에 대해 신년운세 총운을 한국어로 서술해줘. 800자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        relationship: "주어진 사주 정보에 대해 대인관계운을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        wealth: "주어진 사주 정보에 대해 재물운을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        romantic: "주어진 사주 정보에 대해 연애운을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        health: "주어진 사주 정보에 대해 건강운을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        career: "주어진 사주 정보에 대해 직업운을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        waysToImprove: "주어진 사주 정보에 대해 올해 운을 높이는 법을 한국어로 서술해줘. 열거형이 아닌 서술형 이어야하며 500자 이내여야 하고 사용자 정보를 답변에 사용하지 않아도 돼."
        caution: "주어진 사주 정보에 대해 주의할 점을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼."
        questionAnswer: "주어진 사주 정보에 대해 질문에 대한 답변을 한국어로 서술해줘. 500자 이내여야 하며 사용자 정보를 답변에 사용하지 않아도 돼. 만약 질문이 주어지지 않았다면 답변은 생략해도 돼."

gateway:
  existingSecret: ""
  jwtSecret: ""
  jwtHeader: "x-gateway-jwt"

database:
  type: "internal" # internal or external
  existingSecret: ""
  internal:
    image: "postgres:latest"
    host: test-postgres
    port: 5432
    database: saju
    auth:
      username: saju-app-user
      password: saju-app-password
  external:
    host: saju-postgres
    port: 5432
    database: saju
    auth:
      username: saju-app-user
      password: saju-app-password
